{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam singh\\\\Desktop\\\\MVP project\\\\frontend\\\\src\\\\pages\\\\ProjectExplore.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ProjectCard from \"../components/ProjectCard\"; // Import ProjectCard\n// import { fetchProjects } from \"../services/api\"; // Import the service function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:4000/api/v1/projects\";\nconst HomePage = () => {\n  _s();\n  const [projects, setProjects] = useState([]); // State for projects\n  const [loading, setLoading] = useState(true); // State for loading indicator\n  const [error, setError] = useState(null); // State for error messages\n\n  // Function to fetch projects from the API\n  const loadProjects = async () => {\n    try {\n      setLoading(true); // Start loading\n      const response = await fetch(URL, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Error: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json(); // Parse JSON response\n      setProjects(data); // Update projects state\n    } catch (error) {\n      setError(\"Failed to fetch projects. Please try again later.\");\n      console.error(\"Error fetching projects:\", error.message);\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  // Fetch projects when the component mounts\n  useEffect(() => {\n    loadProjects();\n  }, []);\n\n  // Display loading indicator while fetching\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg\",\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Display error message if fetching fails\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col justify-center items-center text-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mb-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-5xl font-extrabold text-blue-600 mb-4\",\n        children: \"Welcome to Our Projects!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-700\",\n        children: \"Discover our innovative platform and stay updated with the latest progress!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mt-12 text-gray-600\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 Your Project Name. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"D01YWZOqXtPgB8Jf7trLNzFYnAg=\");\n_c = HomePage;\nexport default ProjectE;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","ProjectCard","jsxDEV","_jsxDEV","URL","HomePage","_s","projects","setProjects","loading","setLoading","error","setError","loadProjects","response","fetch","method","headers","ok","errorText","text","Error","status","data","json","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","id","_c","ProjectE","$RefreshReg$"],"sources":["C:/Users/Shivam singh/Desktop/MVP project/frontend/src/pages/ProjectExplore.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ProjectCard from \"../components/ProjectCard\"; // Import ProjectCard\r\n// import { fetchProjects } from \"../services/api\"; // Import the service function\r\n\r\nconst URL = \"http://localhost:4000/api/v1/projects\";\r\n\r\nconst HomePage = () => {\r\n  const [projects, setProjects] = useState([]); // State for projects\r\n  const [loading, setLoading] = useState(true); // State for loading indicator\r\n  const [error, setError] = useState(null); // State for error messages\r\n\r\n  // Function to fetch projects from the API\r\n  const loadProjects = async () => {\r\n    try {\r\n      setLoading(true); // Start loading\r\n      const response = await fetch(URL, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Error: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json(); // Parse JSON response\r\n      setProjects(data); // Update projects state\r\n    } catch (error) {\r\n      setError(\"Failed to fetch projects. Please try again later.\");\r\n      console.error(\"Error fetching projects:\", error.message);\r\n    } finally {\r\n      setLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  // Fetch projects when the component mounts\r\n  useEffect(() => {\r\n    loadProjects();\r\n  }, []);\r\n\r\n  // Display loading indicator while fetching\r\n  if (loading) {\r\n    return <p className=\"text-center text-lg\">Loading projects...</p>;\r\n  }\r\n\r\n  // Display error message if fetching fails\r\n  if (error) {\r\n    return <p className=\"text-red-500 text-center\">{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col justify-center items-center text-center p-6\">\r\n      {/* Header */}\r\n      <header className=\"mb-12\">\r\n        <h1 className=\"text-5xl font-extrabold text-blue-600 mb-4\">\r\n          Welcome to Our Projects!\r\n        </h1>\r\n        <p className=\"text-xl text-gray-700\">\r\n          Discover our innovative platform and stay updated with the latest progress!\r\n        </p>\r\n      </header>\r\n\r\n      {/* Projects Section */}\r\n      <section className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n        {projects.map((project) => (\r\n          <ProjectCard key={project.id} project={project} />\r\n        ))}\r\n      </section>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"mt-12 text-gray-600\">\r\n        <p>&copy; 2024 Your Project Name. All rights reserved.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectE;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B,CAAC,CAAC;AACrD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,GAAG,uCAAuC;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAG,EAAE;QAChCY,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAAC,UAAUP,QAAQ,CAACQ,MAAM,MAAMH,SAAS,EAAE,CAAC;MAC7D;MAEA,MAAMI,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;MACpChB,WAAW,CAACe,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,QAAQ,CAAC,mDAAmD,CAAC;MAC7Da,OAAO,CAACd,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACe,OAAO,CAAC;IAC1D,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIJ,OAAO,EAAE;IACX,oBAAON,OAAA;MAAGwB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnE;;EAEA;EACA,IAAIrB,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAGwB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAEjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC5D;EAEA,oBACE7B,OAAA;IAAKwB,SAAS,EAAC,oFAAoF;IAAAC,QAAA,gBAEjGzB,OAAA;MAAQwB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACvBzB,OAAA;QAAIwB,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EAAC;MAE3D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL7B,OAAA;QAAGwB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAErC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGT7B,OAAA;MAASwB,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EACtErB,QAAQ,CAAC0B,GAAG,CAAEC,OAAO,iBACpB/B,OAAA,CAACF,WAAW;QAAkBiC,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAGV7B,OAAA;MAAQwB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eACrCzB,OAAA;QAAAyB,QAAA,EAAG;MAAmD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvEID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAyEd,eAAegC,QAAQ;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}