{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam singh\\\\Desktop\\\\MVP project\\\\frontend\\\\src\\\\pages\\\\ProjectExplore.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ProjectCard from \"../components/ProjectCard\";\nimport { fetchProjects } from \"../services/api\"; // Service function for fetching projects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectExplore = () => {\n  _s();\n  const [projects, setProjects] = useState([]); // State for projects\n  const [loading, setLoading] = useState(true); // State for loading indicator\n  const [error, setError] = useState(null); // State for error messages\n\n  // Mock data to use if API fails or is unavailable\n  const mockProjects = [{\n    id: 1,\n    name: \"Mock Project Alpha\",\n    description: \"A cutting-edge mock project focused on AI and Machine Learning.\",\n    progress: 70,\n    status: \"In Progress\"\n  }, {\n    id: 2,\n    name: \"Mock Project Beta\",\n    description: \"A blockchain-based mock project for secure transactions.\",\n    progress: 50,\n    status: \"In Progress\"\n  }, {\n    id: 3,\n    name: \"Mock Project Gamma\",\n    description: \"A mobile app development mock project for e-commerce.\",\n    progress: 85,\n    status: \"Completed\"\n  }];\n\n  // Function to fetch projects from the API\n  const loadProjects = async () => {\n    try {\n      setLoading(true); // Start loading\n      const data = await fetchProjects(); // Call the API\n      // if (data.length === 0) {\n      // Use mock data if API returns an empty array\n      setProjects(mockProjects);\n      // } else {\n      setProjects(data); // Update state with fetched data\n      // }\n    } catch (err) {\n      console.error(\"Error fetching projects:\", err.message);\n      setError(\"Failed to fetch projects. Displaying mock projects.\");\n      setProjects(mockProjects); // Fallback to mock data on error\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  // Fetch projects when the component mounts\n  useEffect(() => {\n    loadProjects();\n  }, []);\n\n  // Display loading indicator while fetching\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg\",\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Display error message if fetching fails\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Displaying mock projects for now.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col justify-center items-center text-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mb-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-5xl font-extrabold text-blue-600 mb-4\",\n        children: \"Explore Our Projects!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-700\",\n        children: \"Discover innovative projects and stay updated with the latest progress!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mt-12 text-gray-600\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 Your Project Name. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectExplore, \"D01YWZOqXtPgB8Jf7trLNzFYnAg=\");\n_c = ProjectExplore;\nexport default ProjectExplore;\nvar _c;\n$RefreshReg$(_c, \"ProjectExplore\");","map":{"version":3,"names":["React","useState","useEffect","ProjectCard","fetchProjects","jsxDEV","_jsxDEV","ProjectExplore","_s","projects","setProjects","loading","setLoading","error","setError","mockProjects","id","name","description","progress","status","loadProjects","data","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","_c","$RefreshReg$"],"sources":["C:/Users/Shivam singh/Desktop/MVP project/frontend/src/pages/ProjectExplore.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ProjectCard from \"../components/ProjectCard\"; \r\nimport { fetchProjects } from \"../services/api\"; // Service function for fetching projects\r\n\r\nconst ProjectExplore = () => {\r\n  const [projects, setProjects] = useState([]); // State for projects\r\n  const [loading, setLoading] = useState(true); // State for loading indicator\r\n  const [error, setError] = useState(null); // State for error messages\r\n\r\n  // Mock data to use if API fails or is unavailable\r\n  const mockProjects = [\r\n    {\r\n      id: 1,\r\n      name: \"Mock Project Alpha\",\r\n      description: \"A cutting-edge mock project focused on AI and Machine Learning.\",\r\n      progress: 70,\r\n      status: \"In Progress\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Mock Project Beta\",\r\n      description: \"A blockchain-based mock project for secure transactions.\",\r\n      progress: 50,\r\n      status: \"In Progress\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Mock Project Gamma\",\r\n      description: \"A mobile app development mock project for e-commerce.\",\r\n      progress: 85,\r\n      status: \"Completed\",\r\n    },\r\n  ];\r\n\r\n  // Function to fetch projects from the API\r\n  const loadProjects = async () => {\r\n    try {\r\n      setLoading(true); // Start loading\r\n      const data = await fetchProjects(); // Call the API\r\n      // if (data.length === 0) {\r\n        // Use mock data if API returns an empty array\r\n        setProjects(mockProjects);\r\n      // } else {\r\n        setProjects(data); // Update state with fetched data\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"Error fetching projects:\", err.message);\r\n      setError(\"Failed to fetch projects. Displaying mock projects.\");\r\n      setProjects(mockProjects); // Fallback to mock data on error\r\n    } finally {\r\n      setLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  // Fetch projects when the component mounts\r\n  useEffect(() => {\r\n    loadProjects();\r\n  }, []);\r\n\r\n  // Display loading indicator while fetching\r\n  if (loading) {\r\n    return <p className=\"text-center text-lg\">Loading projects...</p>;\r\n  }\r\n\r\n  // Display error message if fetching fails\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <p className=\"text-red-500\">{error}</p>\r\n        <p>Displaying mock projects for now.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col justify-center items-center text-center p-6\">\r\n      {/* Header */}\r\n      <header className=\"mb-12\">\r\n        <h1 className=\"text-5xl font-extrabold text-blue-600 mb-4\">\r\n          Explore Our Projects!\r\n        </h1>\r\n        <p className=\"text-xl text-gray-700\">\r\n          Discover innovative projects and stay updated with the latest progress!\r\n        </p>\r\n      </header>\r\n\r\n      {/* Projects Section */}\r\n      <section className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n        {projects.map((project) => (\r\n          <ProjectCard key={project.id} project={project} />\r\n        ))}\r\n      </section>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"mt-12 text-gray-600\">\r\n        <p>&copy; 2024 Your Project Name. All rights reserved.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectExplore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}